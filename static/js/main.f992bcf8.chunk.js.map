{"version":3,"sources":["blueUniverse.jpg","Home.js","About.js","Resume.js","components/NavBar.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","Container","className","Row","Col","href","icon","faLinkedin","faGithubSquare","faEnvelopeOpenText","CardDeck","Card","Img","variant","src","blue","Body","Title","Text","Footer","About","Resume","NavBar","Navbar","fixed","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Item","Link","App","exact","path","component","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f992bcf8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blueUniverse.72eb1d04.jpg\";","import React from \"react\";\r\nimport { Container, Row, Col, Card, CardDeck } from \"react-bootstrap\";\r\nimport { faEnvelopeOpenText } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLinkedin, faGithubSquare } from \"@fortawesome/free-brands-svg-icons\";\r\nimport blue from \"./blueUniverse.jpg\";\r\n\r\nconst Home = () => (\r\n  <>\r\n    <Container className=\"intro\">\r\n      <Row>\r\n        <Col>\r\n          <h2 className=\"hi\">Hi,</h2>\r\n          <h1 className=\"name\">My name is Jhin McGlynn.</h1>\r\n          <h1 className=\"welcome\">Welcome to my portfolio!</h1>\r\n        </Col>\r\n      </Row>\r\n      <hr />\r\n      <Row>\r\n        <Col>\r\n          <div className=\"skills\">\r\n            Python | Javascript, React, Node | HTML, CSS, Boostrap | Scheme\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"icons\">\r\n            <a href=\"/\">\r\n              <FontAwesomeIcon icon={faLinkedin} className=\"fa\" />\r\n            </a>\r\n            <a href=\"/\">\r\n              <FontAwesomeIcon icon={faGithubSquare} className=\"fa\" />\r\n            </a>\r\n            <a href=\"mailto:jhin.mcglynn@uconn.edu\">\r\n              <FontAwesomeIcon icon={faEnvelopeOpenText} className=\"fa\" />\r\n            </a>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    <Container className=\"projects\">\r\n      <CardDeck>\r\n        <Card>\r\n          <Card.Img variant=\"top\" src={blue} />\r\n          <Card.Body>\r\n            <Card.Title>Card title</Card.Title>\r\n            <Card.Text>\r\n              This is a wider card with supporting text below as a natural\r\n              lead-in to additional content. This content is a little bit\r\n              longer.\r\n            </Card.Text>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small className=\"languages used\">Last updated 3 mins ago</small>\r\n          </Card.Footer>\r\n        </Card>\r\n        <Card>\r\n          <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\r\n          <Card.Body>\r\n            <Card.Title>Card title</Card.Title>\r\n            <Card.Text>\r\n              This card has supporting text below as a natural lead-in to\r\n              additional content.{\" \"}\r\n            </Card.Text>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small className=\"languages used\">Last updated 3 mins ago</small>\r\n          </Card.Footer>\r\n        </Card>\r\n        <Card>\r\n          <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\r\n          <Card.Body>\r\n            <Card.Title>Card title</Card.Title>\r\n            <Card.Text>\r\n              This is a wider card with supporting text below as a natural\r\n              lead-in to additional content. This card has even longer content\r\n              than the first to show that equal height action.\r\n            </Card.Text>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small className=\"languages used\">Last updated 3 mins ago</small>\r\n          </Card.Footer>\r\n        </Card>\r\n      </CardDeck>\r\n    </Container>\r\n  </>\r\n);\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst About = () => <div>About me</div>;\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst Resume = () => <div>Resume</div>;\r\nexport default Resume;\r\n","import React from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\n\r\nconst NavBar = () => (\r\n  <Navbar fixed=\"top\" variant=\"dark\" expand=\"md\">\r\n    <Navbar.Brand>Jhin McGlynn</Navbar.Brand>\r\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      <Nav className=\"ml-auto\">\r\n        <Nav.Item>\r\n          <Nav.Link href=\"/\">Home</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link href=\"/about\">About me</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link href=\"/resume\">Resume</Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n    </Navbar.Collapse>\r\n  </Navbar>\r\n);\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => (\r\n  <div className=\"footer\">\r\n    <p>Designed and built by Jhin McGlynn</p>\r\n  </div>\r\n);\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"./index.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport Resume from \"./Resume\";\nimport NavBar from \"./components/NavBar\";\nimport Footer from \"./components/Footer\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"page-container\">\n        <div className=\"page-wrap\">\n          <NavBar />\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/resume\" component={Resume} />\n            </Switch>\n          </Router>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}